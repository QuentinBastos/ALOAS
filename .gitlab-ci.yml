stages:  # Définition des étapes du pipeline
  - build
  - test
  - analyze
  - deploy

variables:
  COMPOSER_CACHE_DIR: "$CI_PROJECT_DIR/cache/composer"  # Cache pour Composer
  NODE_ENV: "production"  # Environnement pour npm
  SYMFONY_ENV: "test"  # Environnement Symfony

cache:  # Configuration des caches
  paths:
    - cache/composer/
    - node_modules/

build:  # Étape de construction
  stage: build
  image: composer:latest
  script:
    - composer install --prefer-dist --no-progress --no-suggest
    - npm install
  only:
    - merge_requests
    - main

phpunit:  # Tests unitaires avec PHPUnit
  stage: test
  image: php:latest
  script:
    - vendor/bin/phpunit --coverage-text
  artifacts:  # Génération des rapports
    paths:
      - tests/_output/
    expire_in: 1 day
  only:
    - merge_requests

phpstan:  # Analyse de qualité du code avec PHPStan
  stage: analyze
  image: php:latest
  script:
    - vendor/bin/phpstan analyze src/ --level=max
  only:
    - merge_requests

phpcs:  # Vérification des standards avec PHPCS
  stage: analyze
  image: php:latest
  script:
    - vendor/bin/phpcs --standard=PSR12 src/
  only:
    - merge_requests

deploy_production:  # Déploiement en production
  stage: deploy
  image: alpine:latest
  script:
    - echo "Déploiement en production..."
    - ssh user@production-server "cd /path/to/project && git pull && composer install --no-dev && php bin/console cache:clear"
  only:
    - tags
  environment:
    name: production
    url: https://example.com